//----------------------------------------------------------------------------
// This is autogenerated code by CppSharp.
// Do not edit this file or all your changes will be lost after re-generation.
//----------------------------------------------------------------------------
using System;
using System.Runtime.InteropServices;
using System.Security;

namespace libavdevice
{
    public unsafe partial class libavdevice
    {
        /// <summary>
        /// Return the LIBAVDEVICE_VERSION_INT constant.
        /// </summary>
        [SuppressUnmanagedCodeSecurity]
        [DllImport("avdevice-if-55.dll", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
            EntryPoint="avdevice_version")]
        internal static extern uint avdevice_version();

        /// <summary>
        /// Return the libavdevice build-time configuration.
        /// </summary>
        [SuppressUnmanagedCodeSecurity]
        [DllImport("avdevice-if-55.dll", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
            EntryPoint="avdevice_configuration")]
        internal static extern global::System.IntPtr avdevice_configuration();

        /// <summary>
        /// Return the libavdevice license.
        /// </summary>
        [SuppressUnmanagedCodeSecurity]
        [DllImport("avdevice-if-55.dll", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
            EntryPoint="avdevice_license")]
        internal static extern global::System.IntPtr avdevice_license();

        /// <summary>
        /// Initialize libavdevice and register all the input and output devices.
        /// @warning This function is not thread safe.
        /// </summary>
        [SuppressUnmanagedCodeSecurity]
        [DllImport("avdevice-if-55.dll", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
            EntryPoint="avdevice_register_all")]
        internal static extern void avdevice_register_all();
    }
}
