//----------------------------------------------------------------------------
// This is autogenerated code by CppSharp.
// Do not edit this file or all your changes will be lost after re-generation.
//----------------------------------------------------------------------------
using System;
using System.Runtime.InteropServices;
using System.Security;

namespace FFmpeg
{
    public unsafe static partial class libavutil
    {
        public const sbyte AV_BF_ROUNDS = 16;

        [StructLayout(LayoutKind.Sequential)]
        public unsafe partial struct AVBlowfish
        {
            public fixed uint p[18];

            public libavutil.ArrayWrapper_Uint__4 s;
        }

        /// <summary>
        /// Initialize an AVBlowfish context.
        /// 
        /// @param ctx an AVBlowfish context
        /// @param key a key
        /// @param key_len length of the key
        /// </summary>
        [SuppressUnmanagedCodeSecurity]
        [DllImport(AVUTIL_DLL_NAME, CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
            CharSet = CharSet.Ansi, ExactSpelling = true,
            EntryPoint="av_blowfish_init")]
        public static extern void av_blowfish_init(libavutil.AVBlowfish* ctx, byte* key, int key_len);

        /// <summary>
        /// Encrypt or decrypt a buffer using a previously initialized context.
        /// 
        /// @param ctx an AVBlowfish context
        /// @param xl left four bytes halves of input to be encrypted
        /// @param xr right four bytes halves of input to be encrypted
        /// @param decrypt 0 for encryption, 1 for decryption
        /// </summary>
        [SuppressUnmanagedCodeSecurity]
        [DllImport(AVUTIL_DLL_NAME, CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
            CharSet = CharSet.Ansi, ExactSpelling = true,
            EntryPoint="av_blowfish_crypt_ecb")]
        public static extern void av_blowfish_crypt_ecb(libavutil.AVBlowfish* ctx, uint* xl, uint* xr, int decrypt);

        /// <summary>
        /// Encrypt or decrypt a buffer using a previously initialized context.
        /// 
        /// @param ctx an AVBlowfish context
        /// @param dst destination array, can be equal to src
        /// @param src source array, can be equal to dst
        /// @param count number of 8 byte blocks
        /// @param iv initialization vector for CBC mode, if NULL ECB will be used
        /// @param decrypt 0 for encryption, 1 for decryption
        /// </summary>
        [SuppressUnmanagedCodeSecurity]
        [DllImport(AVUTIL_DLL_NAME, CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
            CharSet = CharSet.Ansi, ExactSpelling = true,
            EntryPoint="av_blowfish_crypt")]
        public static extern void av_blowfish_crypt(libavutil.AVBlowfish* ctx, byte* dst, byte* src, int count, byte* iv, int decrypt);
    }
}
