//----------------------------------------------------------------------------
// This is autogenerated code by CppSharp.
// Do not edit this file or all your changes will be lost after re-generation.
//----------------------------------------------------------------------------
using System;
using System.Runtime.InteropServices;
using System.Security;

namespace FFmpeg
{
    public unsafe static partial class libavutil
    {
        public const sbyte AV_ERROR_MAX_STRING_SIZE = 64;

        /// <summary>
        /// Put a description of the AVERROR code errnum in errbuf.
        /// In case of failure the global variable errno is set to indicate the
        /// error. Even in case of failure av_strerror() will print a generic
        /// error message indicating the errnum provided to errbuf.
        /// 
        /// @param errnum      error code to describe
        /// @param errbuf      buffer to which description is written
        /// @param errbuf_size the size in bytes of errbuf
        /// @return 0 on success, a negative value if a description for errnum
        /// cannot be found
        /// </summary>
        [SuppressUnmanagedCodeSecurity]
        [DllImport(AVUTIL_DLL_NAME, CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
            CharSet = CharSet.Ansi, ExactSpelling = true,
            EntryPoint="av_strerror")]
        public static extern int av_strerror(int errnum, System.Text.StringBuilder errbuf, global::System.UIntPtr errbuf_size);

        /// <summary>
        /// Fill the provided buffer with a string containing an error string
        /// corresponding to the AVERROR code errnum.
        /// 
        /// @param errbuf         a buffer
        /// @param errbuf_size    size in bytes of errbuf
        /// @param errnum         error code to describe
        /// @return the buffer in input, filled with the error description
        /// @see av_strerror()
        /// </summary>
        [SuppressUnmanagedCodeSecurity]
        [DllImport(AVUTIL_DLL_NAME, CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
            CharSet = CharSet.Ansi, ExactSpelling = true,
            EntryPoint="av_make_error_string")]
        public static extern sbyte* av_make_error_string(System.Text.StringBuilder errbuf, global::System.UIntPtr errbuf_size, int errnum);
    }
}
