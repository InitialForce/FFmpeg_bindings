//----------------------------------------------------------------------------
// This is autogenerated code by CppSharp.
// Do not edit this file or all your changes will be lost after re-generation.
//----------------------------------------------------------------------------
using System;
using System.Runtime.InteropServices;
using System.Security;

namespace FFmpeg
{
    public unsafe static partial class libavutil
    {
        [StructLayout(LayoutKind.Sequential)]
        public unsafe partial struct AVTWOFISH
        {
        }

        /// <summary>
        /// Allocate an AVTWOFISH context
        /// To free the struct: av_free(ptr)
        /// </summary>
        [SuppressUnmanagedCodeSecurity]
        [DllImport(AVUTIL_DLL_NAME, CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
            CharSet = CharSet.Ansi, ExactSpelling = true,
            EntryPoint="av_twofish_alloc")]
        public static extern libavutil.AVTWOFISH* av_twofish_alloc();

        /// <summary>
        /// Initialize an AVTWOFISH context.
        /// </summary>
        /// <param name="ctx">
        /// an AVTWOFISH context
        /// </param>
        /// <param name="key">
        /// a key of size ranging from 1 to 32 bytes used for encryption/decryption
        /// </param>
        /// <param name="key_bits">
        /// number of keybits: 128, 192, 256 If less than the required, padded with
        /// zeroes to nearest valid value; return value is 0 if key_bits is
        /// 128/192/256, -1 if less than 0, 1 otherwise
        /// </param>
        [SuppressUnmanagedCodeSecurity]
        [DllImport(AVUTIL_DLL_NAME, CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
            CharSet = CharSet.Ansi, ExactSpelling = true,
            EntryPoint="av_twofish_init")]
        public static extern int av_twofish_init(libavutil.AVTWOFISH* ctx, byte* key, int key_bits);

        /// <summary>
        /// Encrypt or decrypt a buffer using a previously initialized context
        /// </summary>
        /// <param name="ctx">
        /// an AVTWOFISH context
        /// </param>
        /// <param name="dst">
        /// destination array, can be equal to src
        /// </param>
        /// <param name="src">
        /// source array, can be equal to dst
        /// </param>
        /// <param name="count">
        /// number of 16 byte blocks
        /// @paran iv initialization vector for CBC mode, NULL for ECB mode
        /// </param>
        /// <param name="decrypt">
        /// 0 for encryption, 1 for decryption
        /// </param>
        [SuppressUnmanagedCodeSecurity]
        [DllImport(AVUTIL_DLL_NAME, CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
            CharSet = CharSet.Ansi, ExactSpelling = true,
            EntryPoint="av_twofish_crypt")]
        public static extern void av_twofish_crypt(libavutil.AVTWOFISH* ctx, byte* dst, byte* src, int count, byte* iv, int decrypt);
    }
}
