//----------------------------------------------------------------------------
// This is autogenerated code by CppSharp.
// Do not edit this file or all your changes will be lost after re-generation.
//----------------------------------------------------------------------------
using System;
using System.Runtime.InteropServices;
using System.Security;

namespace FFmpeg
{
    public unsafe static partial class libavutil
    {
        [StructLayout(LayoutKind.Sequential)]
        public unsafe partial struct AVTEA
        {
        }

        /// <summary>
        /// Allocate an AVTEA context
        /// To free the struct: av_free(ptr)
        /// </summary>
        [SuppressUnmanagedCodeSecurity]
        [DllImport(AVUTIL_DLL_NAME, CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
            CharSet = CharSet.Ansi, ExactSpelling = true,
            EntryPoint="av_tea_alloc")]
        public static extern libavutil.AVTEA* av_tea_alloc();

        /// <summary>
        /// Initialize an AVTEA context.
        /// </summary>
        /// <param name="ctx">
        /// an AVTEA context
        /// </param>
        /// <param name="key">
        /// a key of 16 bytes used for encryption/decryption
        /// </param>
        /// <param name="rounds">
        /// the number of rounds in TEA (64 is the "standard")
        /// </param>
        [SuppressUnmanagedCodeSecurity]
        [DllImport(AVUTIL_DLL_NAME, CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
            CharSet = CharSet.Ansi, ExactSpelling = true,
            EntryPoint="av_tea_init")]
        public static extern void av_tea_init(libavutil.AVTEA* ctx, byte* key, int rounds);

        /// <summary>
        /// Encrypt or decrypt a buffer using a previously initialized context.
        /// </summary>
        /// <param name="ctx">
        /// an AVTEA context
        /// </param>
        /// <param name="dst">
        /// destination array, can be equal to src
        /// </param>
        /// <param name="src">
        /// source array, can be equal to dst
        /// </param>
        /// <param name="count">
        /// number of 8 byte blocks
        /// </param>
        /// <param name="iv">
        /// initialization vector for CBC mode, if NULL then ECB will be used
        /// </param>
        /// <param name="decrypt">
        /// 0 for encryption, 1 for decryption
        /// </param>
        [SuppressUnmanagedCodeSecurity]
        [DllImport(AVUTIL_DLL_NAME, CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
            CharSet = CharSet.Ansi, ExactSpelling = true,
            EntryPoint="av_tea_crypt")]
        public static extern void av_tea_crypt(libavutil.AVTEA* ctx, byte* dst, byte* src, int count, byte* iv, int decrypt);
    }
}
