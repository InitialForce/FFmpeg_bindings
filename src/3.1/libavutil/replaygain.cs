//----------------------------------------------------------------------------
// This is autogenerated code by CppSharp.
// Do not edit this file or all your changes will be lost after re-generation.
//----------------------------------------------------------------------------
// ReSharper disable RedundantUsingDirective
// ReSharper disable CheckNamespace
#pragma warning disable 1584,1711,1572,1581,1580,1573
using System;
using System.Runtime.InteropServices;
using System.Security;

namespace FFmpeg
{
    [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("ReSharper", "UnusedMember.Global")]
    [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("ReSharper", "InconsistentNaming")]
    [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("ReSharper", "RedundantUnsafeContext")]
    [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("ReSharper", "MemberCanBePrivate.Global")]
    [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("ReSharper", "MemberCanBePrivate.Global")]
    [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("ReSharper", "FieldCanBeMadeReadOnly.Global")]
    [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("ReSharper", "PartialTypeWithSinglePart")]
    [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("ReSharper", "RedundantNameQualifier")]
    [System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("ReSharper", "ArrangeModifiersOrder")]
    public unsafe static partial class libavutil
    {
        /// <summary>
        /// ReplayGain information (see
        ///
        /// http://wiki.hydrogenaudio.org/index.php?title=ReplayGain_1.0_specification)
        /// .
        /// The size of this struct is a part of the public ABI.
        /// </summary>
        [StructLayout(LayoutKind.Sequential)]
        public unsafe partial struct AVReplayGain
        {
            /// <summary>
            /// Track replay gain in microbels (divide by 100000 to get the value in
            /// dB).
            /// Should be set to INT32_MIN when unknown.
            /// </summary>
            public int track_gain;

            /// <summary>
            /// Peak track amplitude, with 100000 representing full scale (but values
            /// may overflow). 0 when unknown.
            /// </summary>
            public uint track_peak;

            /// <summary>
            /// Same as track_gain, but for the whole album.
            /// </summary>
            public int album_gain;

            /// <summary>
            /// Same as track_peak, but for the whole album,
            /// </summary>
            public uint album_peak;
        }
    }
}
